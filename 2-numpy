# #
a * b 对应元素相乘
# #

# #
Matplotlib 基础
plot, label
scatter
hist
http://matplotlib.org/gallery.html
# #

# #
Numpy 
数组属性
dtype, itemsize, shape, size, nbytes, ndim
fill方法， 数组中元素dtype 与初始相同

切片是引用，指向所分配的内存空间，会相应改变， 与list不同
a = array([1,2,3,4,5])
b = a[2:4].copy()
copy 方法产生一个复制，申请新的内存

花式索引 fancy slicing

where 语句
indices = where（a>10）
rows, cols = where(a>10) 
where 返回值是一个元组
# #

a = array([1, 1.2, 'hello', [10, 20, 30]], dtype = object)
a*2 = array([2, 2.4, 'hellohello', [10, 20, 30, 10, 20, 30]], dtype = object)

asarray 函数修改dtype，不改变原来的值
astype 返回一个新数组
view 方法
b = a.view(uint8), view将a在内存中的表示看成uint8进行解析，共用一块内存，相应改变
# #

# #
数组方法
求和 sum
sum(a,axis = n) # 0 沿第一维求和;1... ;-1 沿最后一维求和

求积
a.prod() # 求所有元素之积；求积方法
prod(a,axis = n) #　函数形式

求最大值最小值,最大最小值位置，均值，加权平均，标准差，方差
a.min() # 全局最小
a.min(axis = n) # 沿着某个轴最小
max, min, argmax, argmin, mean, average, std, var
average支持加权平均 average(a, axis=n,weights=[1,2])

clip 方法 # 将数值限制在某个范围内
a = array([[1,2,3],
            [4,5,6]])
a.clip(3,5)
array([[3,3,3],
    [4,5,5]])
    
ptp 方法 计算最大值最小值之差
a.ptp(axis=n)

round方法 # 近似，默认到整数 .5近似规则近似到偶数值
a.round(decimals=n) # n = 1, 近似到1位小数
# #

# #
数组排序

sort 函数 # 从小到大排序
sort(weights) 

argsort 函数 # 返回从小到大的排列在数组中的索引位置
###使用函数不改变原数组的值

sort和argsort方法
data.sort() #########会改变原数组
data.argsort() # 同argsort函数 不改变原数组

二维数组排序 ### 对于多维数组，sort方法默认沿着最后一维开始排序

searchsorted 函数
searchsorted(sorted_array. values)# 第一个必须是已排序的数组
searchsorted 返回值相当于保持第一个数组的排序性质不变，将第二个数组的值插入第一个数组中的位置
0   1    2  3   4
0.0 0.25 0.5 0.75 1.0

0.1 0.8 0.3 0.12 0.5 0.25
1   4   2   1    2   1

# 利用该方法提取bounds之间所有的数

# #
数组形状

修改数组形状
a.shape = 2,3 可改变a的shape, 对应的方法reshape 返回新数组，不改变原数组

使用newaxis增加数组维数
y = a[newaxis,:]
y = a[:,newaxis,newaxis]

squeeze方法去除多余的轴
squeeze 返回一个将所有长度为1的维度去除的数组

transpose数组转置
转置只是交换了轴的位置
转置返回的是对原数组的另一种view.所以修改转置会改变原数组的值

数组连接 concatenate((a0,a1,...,an), axis = 0) 
除给定轴外，其他轴的长度必须一致

vstack,hstack,dstack # vertical, horizontal ,deepth

Flastten数组
flatten 方法的作用是将多维数组转化为1维数组，返回的是数组的复制，改变返回的数组不影响原数组的值

flat属性
a.flat 相当于返回了所有元组组成的一个迭代器，修改新数组会改变原数组的值

ravel方法
修改新数组会改变原数组的值，当ravel的对象是原数组的一个view时不改变原数组的值

atleast_xd函数 # 保证数组至少有x维，x取值1,2,3

# #
对角线
a.diagonal()
a.diagonal(offset=1) # 次对角线，正数表示右移，负数表示左移
# #

# #
数组与字符串的转换
tostring方法
a = np.array([[1,2],[3,4]],dtype=np.uint8)
a.tostring()
'\x01\x02\x03\x04'
a.tostring(order='F')

fromstring函数 # 返回的数组是一维的
np.fromstring(s,dtype=np.uint8)
# #

# #
数组属性方法总结
基本属性：dtype, shape, size, itemsize, nbytes, ndim,
形状相关：flat, flatten(), ravel(), resize(), swapaxes(axis1,axis2), transpose(), T, squeeze()
填充复制：copy(), fill()
转化：tolist(), tostring(), astype(), byteswap(), view()
复数：a.imag, a.real, a.conjugate(), a.conj()
保存：a.dump(file) 将二进制文件存在file,a.dump() 将二进制数据表示成字符串，a.tofile(fid,sep='',format='%s')
查找排序：a.nonzero(), a.sort(), a.argsort(),a.searchsorted()
元素数学操作：a.clip(low,high), a.round(decimals=0), a.cumsum(), a.cumprod()
约简操作：a.sum(), a.prod(), a.min(),max,argmin,argmax,ptp,mean,std,var,any#逻辑或，只要有一个不为0，返回真,
all#逻辑与，所有都不为0，返回真

# #
生成数组的函数
arange, linspace, logspace, meshgrid, ogrid, mgrid,
r_, c_, ones, zeros, empty, empty_like, ones_like, zeros_like,identity# 产生单位矩阵
# #

# #
矩阵
mat 方法
A = np.mat(array)
A = np.mat('1,2,3,4,5,6,7,8,9')
bmat 利用分块创建矩阵

矩阵与向量的乘法

A.I 表示逆矩阵

A**4 表示矩阵连乘
# #

# #
一般函数
三角函数
sin(x)
cos(x)
tan(x)
sinh(x)
conh(x)
tanh(x)
arccos(x)
arctan(x)
arcsin(x)
arccosh(x)
arctanh(x)
arcsinh(x)
arctan2(x,y)

arctan2(x,y) 返回 arctan(x/y) 。
......
.....
# #

# #
向量化函数
new_function = np.vectorize(function)
# #

# #
